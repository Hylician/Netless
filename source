local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

local Connections = {}
local Intensity = getgenv().Intensity or 45
coroutine.wrap(function()
	for Index, Object in pairs(Character:GetDescendants()) do
		if Object:IsA("BasePart") and Object.Name ~= "HumanoidRootPart" then
			table.insert(Connections, RunService.RenderStepped:Connect(function()
				Object.Velocity = Vector3.new(Intensity, 0, 0)
			end))
		end
	end
	--[[table.insert(Connections, RunService.RenderStepped:Connect(function()
		settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
		settings().Physics.AllowSleep = false
		setsimulationradius(math.huge, math.huge)
	end))]]
end)()

local function Disconnect()
	for Index, Connection in pairs(Connections) do
		Connection:Disconnect()
	end
end

Humanoid.Died:Connect(function()
	Disconnect()
end)

RootPart.AncestryChanged:Connect(function(Child, Parent)
	if not Parent then
		Disconnect()
	end
end)
